services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: pgdb
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: scheduler_test_db
      # Enable remote connections
      POSTGRES_HOST_AUTH_METHOD: trust
    command:
      - "postgres"
      - "-c"
      - "listen_addresses=*"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "psql -U $$POSTGRES_USER -d $$POSTGRES_DB -c 'SELECT 1;'"]
      interval: 5s
      timeout: 5s
      retries: 5

  # PostgREST API (Supabase-like REST interface)
  postgrest:
    image: postgrest/postgrest:v11.2.2
    container_name: pgrest
    ports:
      - "3000:3000"
    environment:
      # Use postgres role initially since anon role won't exist until init scripts run
      PGRST_DB_URI: postgres://postgres:postgres@pgdb:5432/scheduler_test_db
      PGRST_DB_SCHEMA: public
      PGRST_DB_ANON_ROLE: anon
      PGRST_DB_POOL: 10
      PGRST_SERVER_PORT: 3000
      PGRST_JWT_SECRET: "super-secret-jwt-token-with-at-least-32-characters-long"
      PGRST_OPENAPI_SERVER_PROXY_URI: http://localhost:3000
      # Add retry settings
      PGRST_DB_MAX_RETRIES: 20
      PGRST_DB_RETRY_DELAY: 5
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network
    restart: on-failure

  # Nginx Reverse Proxy for PostgREST
  nginx:
    build:
      context: ./nginx
    container_name: nginx_proxy
    ports:
      - "3001:80" # Expose proxy on host port 3001
    depends_on:
      - postgrest
    networks:
      - app-network
    restart: unless-stopped

  # Optimization Service
  optimize-service:
    build:
      context: ../optimize-service
      dockerfile: Dockerfile
    container_name: optimize
    ports:
      - "8080:8080"
    environment:
      - PORT=8080
    volumes:
      - ../optimize-service:/app
    depends_on:
      - postgres
      - postgrest
    networks:
      - app-network
    restart: on-failure

# Define a custom network for better control
networks:
  app-network:
    driver: bridge

# Define named volumes
volumes:
  pgdata: 